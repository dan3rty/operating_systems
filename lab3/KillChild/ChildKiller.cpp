#include "ChildKiller.h"
#include "Child.h"
#include <iostream>
#include <sys/wait.h>

void ChildKiller::SpawnChild()
{
	const pid_t pid = fork();
	if (pid == 0)
	{
		Child::Live();
	}
	if (pid > 0)
	{
		m_childProcesses.push_back(pid);
		std::cout << "Spawned child process with ID: " << pid << std::endl;
	}
	else
	{
		std::cerr << "Fork failed!" << std::endl;
	}
}

void ChildKiller::KillChild()
{
	if (m_childProcesses.empty())
	{
		std::cout << "No children to kill" << std::endl;
		return;
	}

	const pid_t pid = m_childProcesses.back();
	kill(pid, SIGTERM);
	waitpid(pid, nullptr, 0);
	m_childProcesses.pop_back();
	std::cout << "Killed child process with ID: " << pid << std::endl;
}

void ChildKiller::KillAllChildren()
{
	if (m_childProcesses.empty())
	{
		std::cout << "No children to kill" << std::endl;
		return;
	}
	while (!m_childProcesses.empty())
	{
		KillChild();
	}

	std::cout <<   "…………………▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄\n"
					"……………▄▄█▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓█▄▄\n"
					"…………▄▀▀▓▒░░░░░░░░░░░░░░░░▒▓▓▀▄\n"
					"………▄▀▓▒▒░░░░░░░░░░░░░░░░░░░▒▒▓▀▄\n"
					"……..█▓█▒░░░░░░░░░░░░░░░░░░░░░▒▓▒▓█\n"
					"…..▌▓▀▒░░░░░░░░░░░░░░░░░░░░░░░░▒▀▓█\n"
					"…..█▌▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░▒▓█\n"
					"…▐█▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓█▌\n"
					"…█▓▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓█\n"
					"..█▐▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒█▓█\n"
					"…█▓█▒░░░░░░░░░░░░░░░░░░░░░░░░░░░▒█▌▓█\n"
					"..█▓▓█▒░░░░▒█▄▒▒░░░░░░░░░▒▒▄█▒░░░░▒█▓▓█\n"
					"..█▓█▒░▒▒▒▒░░▀▀█▄▄░░░░░▄▄█▀▀░░▒▒▒▒░▒█▓█\n"
					".█▓▌▒▒▓▓▓▓▄▄▄▒▒▒▀█░░░░█▀▒▒▒▄▄▄▓▓▓▓▒▒▐▓█\n"
					".██▌▒▓███▓█████▓▒▐▌░░▐▌▒▓████▓████▓▒▐██\n"
					"..██▒▒▓███▓▓▓████▓▄░░░▄▓████▓▓▓███▓▒▒██\n"
					"..█▓▒▒▓██████████▓▒░░░▒▓██████████▓▒▒▓█\n"
					"..█▓▒░▒▓███████▓▓▄▀░░▀▄▓▓███████▓▒░▒▓█\n"
					"….█▓▒░▒▒▓▓▓▓▄▄▄▀▒░░░░░▒▀▄▄▄▓▓▓▓▒▒░▓█\n"
					"……█▓▒░▒▒▒▒░░░░░░▒▒▒▒░░░░░░▒▒▒▒░▒▓█\n"
					"………█▓▓▒▒▒░░██░░▒▓██▓▒░░██░░▒▒▒▓▓█\n"
					"………▀██▓▓▓▒░░▀░▒▓████▓▒░▀░░▒▓▓▓██▀\n"
					"………….░▀█▓▒▒░░░▓█▓▒▒▓█▓▒░░▒▒▓█▀░\n"
					"…………█░░██▓▓▒░░▒▒▒░▒▒▒░░▒▓▓██░░█\n"
					"………….█▄░░▀█▓▒░░░░░░░░░░▒▓█▀░░▄█\n"
					"…………..█▓█░░█▓▒▒▒░░░░░▒▒▒▓█░░█▓█\n"
					"…………….█▓█░░█▀█▓▓▓▓▓▓█▀░░█░█▓█▌\n"
					"……………..█▓▓█░█░█░█▀▀▀█░█░▄▀░█▓█\n"
					"……………..█▓▓█░░▀█▀█░█░█▄█▀░░█▓▓█\n"
					"………………█▓▒▓█░░░░▀▀▀▀░░░░░█▓▓█\n"
					"………………█▓▒▒▓█░░░░ ░░░░░░░█▓▓█\n"
					"………………..█▓▒▓██▄█░░░▄░░▄██▓▒▓█\n"
					"………………..█▓▒▒▓█▒█▀█▄█▀█▒█▓▒▓█\n"
					"………………..█▓▓▒▒▓██▒▒██▒██▓▒▒▓█\n"
					"………………….█▓▓▒▒▓▀▀███▀▀▒▒▓▓█\n"
					"……………………▀█▓▓▓▓▒▒▒▒▓▓▓▓█▀\n"
					"………………………..▀▀██▓▓▓▓██▀\n" << std::endl;
}

ChildKiller::~ChildKiller()
{
	KillAllChildren();
}